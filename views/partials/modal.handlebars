<!-- Modal -->
<div class="modal fade" id="postModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
  <div class="modal-dialog modal-custom" role="document">
    <div class="modal-content" >
      <div class="modal-header">

        <div class="col">
        <a id="link" href="/profiles/{{username}}" style="float:left;">
          <img id="profile_picture" style="width: 5rem; display:inline;" src="">
          <dl style="display:inline-block;">
            <dt id="username"></dt> </a>
            <br>
            <dt id="date">2</dt>
          </dl>
        
      </div>
      <div class="col">

        <br>
        <div id="restaurant_id" style="float:right;"></div>
        <br>
        <div id="dish_name" style="float:right;"></div>
        </div>
      </div>

      <div class="modal-body" style="margin: 1px; padding: 1px;">
        <img id="picture" class="card-img-top" style="width: 100%; height: 100%;"src="" alt="Card image cap">
        <p id="rating"></p>
        <p id="caption"></p>
      </div>
      

      <div class="modal-footer">
        <span class="mr-auto">
          <img src="/images/fork_outline.png" id="like-btn" onClick="like()" width="10rem" height="20rem">
          <img src="/images/fork_filled.png" id="undo-like-btn" onClick="like()" width="10rem" height="20rem">
          <span id="likes"></span>

          <img src="/images/knife_outline.png" id="dislike-btn" onClick="dislike()" width="10rem" height="20rem">
          <img src="/images/knife_filled.png" id="undo-dislike-btn" onClick="dislike()" width="10rem" height="20rem">
          <span id="dislikes"></span>
        </span>

        <p id="delete-message" style="display:none"> Are you sure? </p>
        <button id="delete-yes" style="display:none" class="btn btn-secondary"> Yes </button>
        <button id="delete-no" style="display:none" class="btn btn-secondary"> No </button>
        <button id="delete-btn" class="btn btn-secondary"> Delete post </button>
        <button type="button" class="btn btn-secondary close-modal" data-dismiss="modal">Close</button>

    </div>
  </div>
</div>


<!-- JS for modal -->
<script>
  // modal stuff
  $('#postModal').on('hidden.bs.modal', function () {
    $('body').css('overflow', 'auto');
  })

  $('#postModal').on('shown.bs.modal', function (e) {
    $('html').addClass('freezePage'); 
    $('body').addClass('freezePage');
  });
  $('.modal').on('hidden.bs.modal', function (e) {
    $('html').removeClass('freezePage');
    $('body').removeClass('freezePage');
  });


  $(function(){
    if (/iPhone|iPod|iPad/.test(navigator.userAgent)) {
      $('iframe').wrap(function(){
        var $this = $(this);
        return $('<div />').css({
          width: $this.attr('width'),
          height: $this.attr('height'),
          overflow: 'scroll',
          '-webkit-overflow-scrolling': 'touch'
        });
      });
    }
  })

  getCookie = (name) => {
  var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
    if (match) return match[2];
  }
  const access_token = getCookie('accessToken');
  let post_id = 0;
  let data;

  // set dynamic data such as like and dislike counts
  function setData(postid, likes, dislikes, liked, disliked) {
    console.log('set data');
    $('#post'+postid).data({
      likes: likes,
      dislikes: dislikes,
      liked: liked,
      disliked: disliked
    });
  }

  function showModal(profile_picture, username, date, picture, dish_name, 
    caption, rating, likes, dislikes, restaurant_id, postid, canEdit, liked, disliked) {
    post_id = postid;
    postData = $('#post'+postid).data();

    if ( $('#post'+postid).data('likes') === undefined )
      setData(postid, likes, dislikes, liked, disliked);
    

    $('#profile_picture').attr('src', profile_picture);
    $('#link').attr('href', '/profiles/' + username)
    $('#username').text(username)
    $('#date').text(date);
    $('#picture').attr('src', '/api/photos/' + picture);
    $('#dish_name').text('dish name: ' + dish_name);
    $('#caption').text('caption: ' + caption);
    $('#rating').text('rating: ' + rating);
    $('#likes').text(postData.likes);
    $('#dislikes').text(postData.dislikes);
    $('body').css('overflow', 'hidden');
    $('#restaurant_id').text(restaurant_id);

    
    //SQL doesn't support boolean in CASE statement, so values are set as 1 or 0
    if (canEdit == '1') // only show delete button for your own post
      $('#delete-btn').show();
    else
      $('#delete-btn').hide();


    //check if the user has liked/disliked post and display the appropriate buttons
    $('#like-btn').hide();
    $('#undo-like-btn').hide();
    $('#dislike-btn').hide();
    $('#undo-dislike-btn').hide();

    if (postData.liked == '1') 
      $('#undo-like-btn').show()  //already liked the post; show filled in fork
    else
      $('#like-btn').show()  //haven't liked the post; show fork outline

    if (postData.disliked == '1') //already disliked; show filled in knife
      $('#undo-dislike-btn').show();
    else
      $('#dislike-btn').show();


    $("#postModal").modal()
  }

  // close popup modal
  $('.close-modal').click(() => {
    $('body').css('overflow', 'auto');
  });


  $('#likes').click( () => { like(); } );
  function like(callback) {
    $.ajax({
      url: '/api/posts/' + post_id + '/like',
      type: 'POST',
      datetype: 'json',
      beforeSend: function (xhr) {   //Include the bearer token in header
        xhr.setRequestHeader("Authorization", 'Bearer '+accessToken);
      },
      success: (data) => {
        const prevLikes = postData.likes;
        const currLikes = data.updated_val.likes; 
        $('#likes').text(currLikes);
        postData.likes = currLikes;

        if (prevLikes < currLikes) { // user liked post
          $('#undo-like-btn').show();
          $('#like-btn').hide();
          postData.liked = '1';
        }
        else { // user undo liked post
          $('#undo-like-btn').hide();
          $('#like-btn').show();
          postData.liked = '0';
        }

        if (callback)
          callback();

      },
      error: (err) => {
        // user tried to like post while already disliked; dislike the post for
        // the user and then like it
        if (err.status == 409) { 
          dislike( () => like() );
        }
        else {
          $('.close-modal').click();
          const alertTitle = "Error " + err.status + ": " + err.statusText;
          let alertText = "";
          if (err.responseJSON.error && err.responseJSON.error.code == 190) // auth error
            alertText = err.responseJSON.error.message + " Please log in and try again.";
          else // other error
            alertText = err.responseJSON.message;
          
          alertModal(alertTitle, alertText);
        }
        
      },
    });
  }

  $('#dislikes').click( () => { dislike(); } );
  function dislike(callback) {
    $.ajax({
      url: '/api/posts/' + post_id + '/dislike',
      type: 'POST',
      datetype: 'json',
      beforeSend: function (xhr) {   //Include the bearer token in header
        xhr.setRequestHeader("Authorization", 'Bearer '+accessToken);
      },
      success: (data) => {
        
        const prevDislikes = postData.dislikes;
        const currDislikes = data.updated_val.dislikes; 
        postData.dislikes = currDislikes;
        $('#dislikes').text(currDislikes);

        if (prevDislikes < currDislikes) { // user disliked post
          $('#undo-dislike-btn').show();
          $('#dislike-btn').hide();
          postData.disliked = '1';
        }
        else { // user undo disliked post
          $('#undo-dislike-btn').hide();
          $('#dislike-btn').show();
          postData.disliked = '0';
        }
        if (callback)
          callback();
      },
      error: (err) => {

        // user tried to dislike post while already liked; like the post for
        // the user and then dislike it
        if (err.status == 409) { 
          like( () => dislike() );
        }
        else {
          $('.close-modal').click();
          const alertTitle = "Error " + err.status + ": " + err.statusText;
          let alertText = "";
          if (err.responseJSON.error && err.responseJSON.error.code == 190) // auth error
            alertText = err.responseJSON.error.message + " Please log in and try again.";
          else // other error
            alertText = err.responseJSON.message;
          
          alertModal(alertTitle, alertText);
        }

      },
    });
  };


  $('#delete-btn').click( () => {
    $('#delete-btn').hide();
    $('#delete-message').show();
    $('#delete-yes').show();
    $('#delete-no').show();
  })

  $('#delete-no').click( () => {
    $('#delete-btn').show();
    $('#delete-message').hide();
    $('#delete-yes').hide();
    $('#delete-no').hide();
  })

  $('#delete-yes').click( () => {
    $('#post'+post_id).hide();
    $('#delete-no').click();
    $('.close-modal').click();
    alertModal("Post deleted");

    // $.ajax({
    //   url: '/api/posts/' + post_id + '/delete',
    //   type: 'DELETE',
    //   beforeSend: function (xhr) {   //Include the bearer token in header
    //     xhr.setRequestHeader("Authorization", 'Bearer '+access_token);
    //   },
    //   success: (data) => {
    //     alert('deleted')
    //   },
    //   error: (err) => {
    //     alert(JSON.stringify(err));
    //   },
    // });
  })
</script>
