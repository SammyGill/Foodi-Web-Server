<!DOCTYPE html>
<html lang='eg'>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta charset='UTF-8'/>
  <title>Create a Restaurant</title>
  <link rel='stylesheet' href=''/>





  <style> 
      #map {
        height: 400px;
        width: 400px;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      .controls {
        background-color: #fff;
        border-radius: 2px;
        border: 1px solid transparent;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        box-sizing: border-box;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        height: 29px;
        margin-left: 17px;
        margin-top: 10px;
        outline: none;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
      }

      .controls:focus {
        border-color: #4d90fe;
      }
      .title {
        font-weight: bold;
      }
      #infowindow-content {
        display: none;
      }
      #map #infowindow-content {
        display: inline;
      }

    </style>

		</head>
<body>
<input id="pac-input" class="controls" type="text"
        placeholder="Enter a location">
    <div id="map"></div>
    <div id="infowindow-content">
      <span id="place-name"  class="title"></span><br>
      Place ID <span id="place-id"></span><br>
      <span id="place-address"></span>
    </div>



    <h1 id="text">Foodie Create a Restaurant</h1>
   <!-- form for creating post -->
   <div class="form-container">
   <form id="data" method="post" enctype="multipart/form-data">
      <label  for="restaurant_id"><b>Restaurant ID</b></label>
      <input id="restaurant_id" type="text"  name="restaurant_id" disabled="true">
      <br>
      <label for="name"><b>Restaurant name</b></label>
      <input id="name" type="text" name="name" disabled="true">
      <br>
      <label for="author"><b>Street address</b></label>
      <input class="field" id="street_number" name="street_number" disabled="true"></input>
      <input class="field" id="route" name="route" disabled="true">
      <br>
      <label for="city"><b>City</b></label>
      <input class="field" id="locality" name="locality" disabled="true"></input>
      <br>
      <label for="state"><b>State</b></label>
      <input class="field" id="administrative_area_level_1" name="administrative_area_level_1" disabled="true"></input>
      <br>
      <label for="zip_code"><b>Zip code</b></label>
      <input id="postal_code" type="text" name="postal_code" disabled="true">
      <br>
      <label for="hours"><b>Hours:</b></label>
      <input id="hours" type="text"  name="hours" disabled="true">
      <br>
      <input id="submit" type="submit" value="Create Restaurant!">
    </form>
  </div>

  <!-- show created post -->
  <div id="get_response">
    <p id="id"> Restaurant ID: </p>
    <p id="restaurant_name"> Restaurant name: </p>
    <p id="address"> Address: </p>
    <p id="city"> City: </p>
    <p id="state"> State: </p>
    <p id="zip"> Zip code: </p>
    <p id="operation_hours"> Operation hours: </p>
    
  </div>
  <br>

  <script src="http://code.jquery.com/ui/1.9.2/jquery-ui.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
  <script>
    $(document).ready( () => {

      const formToJSON = elements => [].reduce.call(elements, (data, element) => {
        data[element.name] = element.value;
        return data;
      }, {});

      $('#get_response').hide();
      $("form#data").submit(function(e) {
        e.preventDefault(); 

        const form = this;
        const data = formToJSON(form.elements);
        console.log(data)

        $.ajax({
          url: '/api/restaurants/create',
          type: 'POST',
          data: data,
          datetype: 'json',
          success: (data) => {
            $('#text').text("Restaurant created!");
            $('#data').hide();
            const restaurant_id = data.restaurant_id;
            
            $.ajax({
              url: '/api/restaurants/'+restaurant_id,
              type: 'GET',
              datetype: 'json',
              success: (data) => {
                $('#get_response').show();
                $('#id').append(data.restaurant_id);
                $('#restaurant_name').append(data.name);
                $('#address').append(data.street_number + ' ' + data.route);
                $('#city').append(data.locality);
                $('#state').append(data.administrative_area_level_1);
                $('#zip').append(data.postal_code);
                $('#operation_hours').append(data.hours);
              }
            });

          },
          error: (err) => {
            alert(JSON.stringify(err));
          },
        });
      });    
    })
    
  
  </script>

<script>
      // This sample uses the Place Autocomplete widget to allow the user to search
      // for and select a place. The sample then displays an info window containing
      // the place ID and other information about the place that the user has
      // selected.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -33.8688, lng: 151.2195},
          zoom: 13
        });

        var input = document.getElementById('pac-input');

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);

        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var infowindow = new google.maps.InfoWindow();
        var infowindowContent = document.getElementById('infowindow-content');
        infowindow.setContent(infowindowContent);
        var marker = new google.maps.Marker({
          map: map
        });
        marker.addListener('click', function() {
          infowindow.open(map, marker);
        });

        autocomplete.addListener('place_changed', function() {
          infowindow.close();
          var place = autocomplete.getPlace();
          var restaurant = {};
          
          $('#restaurant_id').val(place.place_id);
          $('#name').val(place.name);
          var componentForm = {
            street_number: 'short_name',
            route: 'long_name',
            locality: 'long_name',
            administrative_area_level_1: 'short_name',
            country: 'long_name',
            postal_code: 'short_name'
          };

          // automatically fill in fields
          for (let i = 0; i < place.address_components.length; i++) {
            let addressType = place.address_components[i].types[0];

            if (componentForm[addressType]) {
              var val = place.address_components[i][componentForm[addressType]];
              $('#'+addressType).val(val);
              restaurant[addressType] = val;
            }
          }
          
          const hours = place.opening_hours.weekday_text;
          restaurant["hours"] = hours[0] + '\n' + hours[1] + '\n' + hours[2] + '\n' +hours[3] + '\n' +hours[4] + '\n' +hours[5] + '\n' +hours[6];
          $('#hours').val(restaurant.hours);  
          console.log(restaurant);


         if (!place.geometry) {
            return;
          }

          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);
          }

          // Set the position of the marker using the place ID and location.
          marker.setPlace({
            placeId: place.place_id,
            location: place.geometry.location
          });
          marker.setVisible(true);

          infowindowContent.children['place-name'].textContent = place.name;
          infowindowContent.children['place-id'].textContent = place.place_id;
          infowindowContent.children['place-address'].textContent =
              place.formatted_address;
          infowindow.open(map, marker);
        });
      }
    </script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB6ATDZBleVEUdqGRj5ViySw_L6RVjOZzE&libraries=places&callback=initMap"
        async defer></script>
  
</body>
<html>
