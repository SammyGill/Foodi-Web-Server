<!DOCTYPE html>
<html lang='eg'>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta charset='UTF-8'/>
  <title>Create a Post</title>
  <link rel='stylesheet' href=''/>

  <style> 
      .ui-autocomplete {
        background-color: #fff;
      }
      #map {
        height: 400px;
        width: 400px;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      .controls {
        background-color: #fff;
        border-radius: 2px;
        border: 1px solid transparent;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        box-sizing: border-box;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        height: 29px;
        margin-left: 17px;
        margin-top: 10px;
        outline: none;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
      }

      .controls:focus {
        border-color: #4d90fe;
      }
      .title {
        font-weight: bold;
      }
      #infowindow-content {
        display: none;
      }
      #map #infowindow-content {
        display: inline;
      }

    </style>

		</head>

<body>

  <form id="data">
    <!-- Progress Bar -->
    <ul id="progressbar">
      <li class="active">Food Picture</li>
      <li>Your Info</li>
      <li>Dish's Info</li>
      <li>Your Review</li>
    </ul>
    
    <!-- Field Sets -->
    <fieldset>
      <h2 class = "fs-title">Upload food picture</h2>
      <h3 class="fs-subtitle">This is step 1</h3>
      <input type="file" id = "file" name="imgae">
      <input type ="button"  name="next" class="next action-button" value="Next"/>
    </fieldset>

    <fieldset>
      <h2 class="fs-title">Your token</h2>
      <h3 class="fs-subtitle">This is step 2</h3>
      <input type="text" id="access_token" placeholder="Enter access token" required/>
      <input type="button" name="previous" class="previous action-button" value="Previous" />
      <input type="button" name="next" class="next action-button" value="Next"/>
    </fieldset>

    <fieldset>
      <h2 class="fs-title">Dish's Info</h2>
      <h3 class="fs-subtitle">This is step 3</h3>
      <input type="text" id="pac-input" class="controls" placeholder="Enter a location"/>
        <div id="map"></div>
        <div id="infowindow-content">
          <span id="place-name" class="title"></span><br>
          Place ID <span id="place-id"></span><br>
          <span id="place-address"></span>
        </div>
      <input id="restaurant_id" type="text" placeholder="Enter Restaurant ID" name="restaurant_id" required>
      <input id="dish_name" type="text" placeholder="Enter dish name" name="dish_name" required>
      <input type="button" name="previous" class="previous action-button" value="Previous" />
      <input type="button" name="next" class="next action-button" value="Next"/>
    </fieldset>

    <fieldset>
      <h2 class="fs-title">Your Review</h2>
      <h3 class="fs-subtitle">This is step 4</h3>
      <input type="text" id="rating" placeholder="Enter rating" name="rating" required />
      <input type="text" id="caption" placeholder="Enter caption" name="caption" required/>
      <input type="button" name="previous" class="previous action-button" value="Previous" />
      <input type="submit" name="submit" class="submit action-button" value="Submit"/>
      <input type="date" id="date" placeholder="Enter date" name="date" />
    </fieldset>

  </form>

</body>













<!--
<input id="pac-input" class="controls" type="text"
        placeholder="Enter a location">
    <div id="map"></div>
    <div id="infowindow-content">
      <span id="place-name"  class="title"></span><br>
      Place ID <span id="place-id"></span><br>
      <span id="place-address"></span>
    </div>


   <h1 id="text">Foodie Create a Post</h1> -->
   <!-- form for creating post -->
   <div class="form-container">
   <form id="data" method="post" enctype="multipart/form-data">
   </form>
  </div>

   <input id="seed_one" type="text" name="seed_one"/>

  <!-- show created post -->
  <div id="get_response">
    <p id="postid"> Post ID: </p>
    <p id="id"> Restaurant ID: </p>
    <p id="dish"> Dish name: </p>
    <p id="author"> Author ID: </p>
    <p id="post_caption"> Post caption: </p>
    <p id="post_rating"> Post rating: </p>
    <p id="post_date"> Post date: </p>
    <p id="pic"> Dish image: </p>
    <img id="image" src="">
  </div>
  <br>
-->
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>
<script>
  var current_fs;
  var next_fs;
  var previous_fs;
  var left;
  var opacity;
  var scale;
  var animating;

  #(".next").click(function()){
    if(animating) return false;
    animating = true;
    current_fs = $(this).parent();
    next_fs = $(this).parent().next();

    #("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");
    next_fs.show();
    current_fs.animate({opacity: 0}, {
      step: function(now, mx) {
        scale = 1 - (1-now) * 0.2;
        left = (now * 50) + "%";
        opacity = 1-now;
        current_fs.css({
          'transform': 'scale('+scale+')',
          'position': 'absolute'
        });
        next_fs.css({'left': left, 'opacity': opacity});
      },
      duration: 800,
      complete: function(){
        current_fs.hide();
        animating = false;
      },
      easing: 'easeInOutBack'
      });
    });
  
  $(".previous").click(function(){
    if(animating) return false;
    animating = true;
    current_fs = $(this).parent();
    previous_fs $(this).parent().prev();

    $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");
    previous_fs.show();
    current_fs.animate({opacity: 0}, {
      step: function(now, mx) {
        scale = 0.8 + (1-now) * 0.2;
        left = ((1-now) * 50) + "%";
        opacity = 1-now;
        current_fs.css({'left': left});
        previous_fs.css({'transform': 'scale('+scale+')', 'opacity': opacity});
      },
      duration: 800,
      complete: function(){
        current_fs.hide();
        animating = false;
      },
      easing: 'easeIntOutBack'
    });
  });
    
  $(".submit").click(function(){
    return false;
  });
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    document.querySelector("#date").valueAsDate = new Date();
    $(document).ready( () => {

      getCookie = (name) => {
      var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        if (match) return match[2];
      }
      const access_token = getCookie('accessToken');

      $('#get_response').hide();
    
      $( "#dish_name" ).autocomplete({
        source: (request, response) => {
          $.ajax({
            url: '/api/restaurants/' + $('#restaurant_id').val() + '/dish-list',
            type: 'GET',
            dataType: 'json',
            success: (data) => {
              response(data.dish_names);
            }
          })
        }
      });

      $("form#data").submit(function(e) {
        e.preventDefault();    
        var formData = new FormData(this);
console.log(formData);      
        const access_token = access_token;
        $.ajax({
          url: '/api/posts/create',
          type: 'POST',
          data: formData,
          beforeSend: function (xhr) {   //Include the bearer token in header
            xhr.setRequestHeader("Authorization", 'Bearer '+access_token);
          },
          success: (data) => {
            $('#text').text("Post created!");
            $('#data').hide();
            const picture = data.picture;
            const post_id = data.post_id;
            
            $.ajax({
              url: '/api/posts/'+post_id,
              type: 'GET',
              datetype: 'json',
              success: (data) => {
                $('#get_response').show();
                $('#postid').append(data.post_id);
                $('#id').append(data.restaurant_id);
                $('#dish').append(data.dish_name);
                $('#author').append(data.author_id);
                $('#post_caption').append(data.caption);
                $('#post_rating').append(data.rating);
                $('#post_date').append(data.date);
                $('#image').attr('src', '/api/photos/' + data.picture);
              }
            });

          },
          error: (err) => {
            alert(JSON.stringify(err));
          },
          cache: false,
          contentType: false,
          processData: false
        });
      });    
    })
    
  
      // This sample uses the Place Autocomplete widget to allow the user to search
      // for and select a place. The sample then displays an info window containing
      // the place ID and other information about the place that the user has
      // selected.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -33.8688, lng: 151.2195},
          zoom: 13
        });

        var input = document.getElementById('pac-input');

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);

        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var infowindow = new google.maps.InfoWindow();
        var infowindowContent = document.getElementById('infowindow-content');
        infowindow.setContent(infowindowContent);
        var marker = new google.maps.Marker({
          map: map
        });
        marker.addListener('click', function() {
          infowindow.open(map, marker);
        });

        autocomplete.addListener('place_changed', function() {
          infowindow.close();
          var place = autocomplete.getPlace();
          var restaurant = {};
          var a = place.address_components;
          $('#restaurant_id').val(place.place_id);
          if (!place.geometry) {
            return;
          }

          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);
          }

          // Set the position of the marker using the place ID and location.
          marker.setPlace({
            placeId: place.place_id,
            location: place.geometry.location
          });
          marker.setVisible(true);

          infowindowContent.children['place-name'].textContent = place.name;
          infowindowContent.children['place-id'].textContent = place.place_id;
          infowindowContent.children['place-address'].textContent =
              place.formatted_address;
          infowindow.open(map, marker);
        });
      }
    </script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB6ATDZBleVEUdqGRj5ViySw_L6RVjOZzE&libraries=places&callback=initMap"
        async defer></script>
  
</body>
<html>
